import{_ as e,o as a,c as s,a as t}from"./app.47be1152.js";const n={},i=t(`<blockquote class="em"><p>Starbeam&#39;s reactive collections have the identical API as the built-in JavaScript APIs they are based on.</p></blockquote><p>Starbeam ships with a number of built-in reactive collections.</p><ul><li>Reactive Object</li><li>Reactive Array</li><li>Reactive Map and WeakMap</li><li>Reactive Set and WeakSet</li></ul><p>From a usage perspective, these collections identical to their JavaScript counterparts. Instances of reactive collections have exactly the same methods as their JavaScript counterparts, and those methods behave identically.</p><p><strong>The only distinction</strong> is that when you mutate a reactive collection, any formula or resource that used the collection as an input will invalidate.</p><div class="custom-container tip"><p class="custom-container-title">Tips</p><p>This is even true in TypeScript: when you use a reactive collection in TypeScript, its type is literally the same as the JavaScript type.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> reactive <span class="token keyword">from</span> <span class="token string">&quot;@starbeam/js&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> map <span class="token operator">=</span> reactive<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">Map</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// typeof map is Map&lt;string, number&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,6),c=[i];function o(p,l){return a(),s("div",null,c)}var u=e(n,[["render",o],["__file","index.html.vue"]]);export{u as default};
