import{_ as s,o as n,c as o,e as t,a as e,r as l}from"./app.74eca79f.js";const m=JSON.parse('{"title":"@starbeam/timeline","description":"","frontmatter":{},"headers":[{"level":2,"title":"export const LIFETIME","slug":"export-const-lifetime"},{"level":3,"title":"Events","slug":"events"},{"level":3,"title":"Methods","slug":"methods"},{"level":2,"title":"export const ReactiveProtocol","slug":"export-const-reactiveprotocol"},{"level":3,"title":"Methods","slug":"methods-1"},{"level":2,"title":"export const TIMELINE","slug":"export-const-timeline"},{"level":3,"title":"Description","slug":"description"},{"level":3,"title":"Properties","slug":"properties"},{"level":2,"title":"Interfaces","slug":"interfaces"}],"relativePath":"api/timeline.md"}'),i={name:"api/timeline.md"},c=e(`<h1 id="starbeam-timeline" tabindex="-1">@starbeam/timeline <a class="header-anchor" href="#starbeam-timeline" aria-hidden="true">#</a></h1><nav class="table-of-contents"><ul><li><a href="#export-const-lifetime">export const LIFETIME</a><ul><li><a href="#on-cleanup">on.cleanup</a></li><li><a href="#link">link</a></li><li><a href="#finalize">finalize</a></li></ul></li><li><a href="#export-const-reactiveprotocol">export const ReactiveProtocol</a><ul><li><a href="#debug">debug</a></li><li><a href="#finalize-1">finalize</a></li></ul></li><li><a href="#export-const-timeline">export const TIMELINE</a><ul><li><a href="#now">now</a></li></ul></li><li><a href="#interfaces">Interfaces</a><ul><li><a href="#unsubscribe">Unsubscribe</a></li></ul></li></ul></nav><h2 id="export-const-lifetime" tabindex="-1"><code>export const LIFETIME</code> <a class="header-anchor" href="#export-const-lifetime" aria-hidden="true">#</a></h2><p><code>LIFETIME</code> provides a mechanism for <em>structured cleanup</em> of objects.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p><em>Structured cleanup</em> means linking the cleanup of an object to the lifetime of its <em>owner</em>, and the ability to register cleanup handlers for objects.</p></div><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-hidden="true">#</a></h3><div class="api"><h4 id="on-cleanup" tabindex="-1">on.cleanup <a class="header-anchor" href="#on-cleanup" aria-hidden="true">#</a></h4><p>Register a cleanup handler for an object. This function is called when the object is <a href="#finalized">finalized</a>.</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cleanup</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">handler</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Unsubscribe</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><dl class="signature"><dt>handler</dt><dd><code>() =&gt; void</code><span>The function that should run when this object is cleaned up.</span></dd><dt>returns</dt><dd><code>Unsubscribe</code></dd></dl></div><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h3><div class="api"><h4 id="link" tabindex="-1">link <a class="header-anchor" href="#link" aria-hidden="true">#</a></h4><p>Link an object to its owner. When an object&#39;s owner is <a href="#finalized">finalized</a>, it will be <a href="#finalized">finalized</a>.</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">link</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">parent</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> child</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Unsubscribe</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><dl class="signature"><dt>parent</dt><dd><code>object</code><span>The object to link the child to.</span></dd><dt>child</dt><dd><code>object</code><span>The object to be linked.</span></dd><dt>returns</dt><dd><code>Unsubscribe</code></dd></dl></div><div class="api"><h4 id="finalize" tabindex="-1">finalize <a class="header-anchor" href="#finalize" aria-hidden="true">#</a></h4><p>Finalize an object. The object&#39;s cleanup handlers will be called, and all linked objects will be finalized.</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">finalize</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">object</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><dl class="signature"><dt>object</dt><dd><code>object</code><span>The object that should be cleaned up.</span></dd></dl></div><h2 id="export-const-reactiveprotocol" tabindex="-1"><code>export const ReactiveProtocol</code> <a class="header-anchor" href="#export-const-reactiveprotocol" aria-hidden="true">#</a></h2><p><code>ReactiveProtocol</code> provides introspection tools for values implementing <code>ReactiveProtocol</code>.</p><h3 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-hidden="true">#</a></h3><div class="api"><h4 id="debug" tabindex="-1">debug <a class="header-anchor" href="#debug" aria-hidden="true">#</a></h4><p>Return a pretty-printed list of the reactive value&#39;s dependencies.</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">link</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">reactive</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> options</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Unsubscribe</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><dl class="signature"><dt>reactive</dt><dd><code>ReactiveProtocol</code><span>An object that implements ReactiveProtocol.</span></dd><dt>options</dt><dd><code>object</code><span>The object to be linked.</span></dd><dt>returns</dt><dd><code>Unsubscribe</code></dd></dl></div><div class="api"><h4 id="finalize-1" tabindex="-1">finalize <a class="header-anchor" href="#finalize-1" aria-hidden="true">#</a></h4><p>Finalize an object. The object&#39;s cleanup handlers will be called, and all linked objects will be finalized.</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">finalize</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">object</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><dl class="signature"><dt>object</dt><dd><code>object</code><span>The object that should be cleaned up.</span></dd></dl></div><h2 id="export-const-timeline" tabindex="-1"><code>export const TIMELINE</code> <a class="header-anchor" href="#export-const-timeline" aria-hidden="true">#</a></h2><h3 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-hidden="true">#</a></h3>`,17),d=e(`<h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h3><h4 id="now" tabindex="-1">now <a class="header-anchor" href="#now" aria-hidden="true">#</a></h4><div class="api"><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">TIMELINE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">now: Timestamp</span></span>
<span class="line"></span></code></pre></div><dl><dt>now</dt><dd><code>Timestamp</code><span>The current timestamp.</span></dd></dl></div><h2 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-hidden="true">#</a></h2><div class="api"><h4 id="unsubscribe" tabindex="-1"><code>Unsubscribe</code> <a class="header-anchor" href="#unsubscribe" aria-hidden="true">#</a></h4><p>A function returned from subscription functions that can be used to unsubscribe the original subscription.</p></div>`,5);function r(p,h,A,u,b,f){const a=l("Mermaid");return n(),o("div",null,[c,t(a,{id:"mermaid-382ee221",code:"%25%25%7Binit%3A%20%7B%22theme%22%3A%22neutral%22%2C%22themeVariables%22%3A%7B%22fontFamily%22%3A%22Azeret%20Mono%22%7D%2C%22flowchart%22%3A%7B%22curve%22%3A%22linear%22%2C%22htmlLabels%22%3Atrue%7D%2C%22themeCSS%22%3A%22*%20%7B%20box-sizing%3A%20border-box%20%7D%20foreignObject%20%7B%20%20display%3A%20block%3B%20%7D%20span%20%7B%20%20all%3Arevert%3B%20font-display%3A%20block%3B%20%20text-size-adjust%3A%20100%25%3B%20font-size%3A%201rem%3B%20line-height%3A%201.4%3B%20box-sizing%3A%20border-box%3B%20display%3A%20inline-block%3B%20white-space%3A%20nowrap%3B%20%7D%20b%20%7B%20font-weight%3A%20normal%3B%20color%3A%20%23666%3B%20%7D%20span.nodeLabel%20%7B%20width%3A%20max-content%3B%20max-width%3A60ch%3B%20white-space%3Anormal%3B%20overflow-wrap%3A%20break-word%3B%20%20%7D%20.lifecycle%20span%20span.nodeLabel%2C%20span.edgeLabel%2C%20g.node.note%20foreignObject%20div%20span.nodeLabel%20%7B%20line-height%3A%201.35%3B%20%20padding%3A0%20%20%7D%20%20g.node.lifecycle%20span.nodeLabel%20%7B%20font-weight%3A%20bold%3B%20%7D%20%20.lifecycle%20span.nodeLabel%20%7B%20color%3A%20%23a00%20%7D%20%20.lifecycle%20span.nodeLabel%20span%20%7B%20font-size%3A%2080%25%3B%20font-weight%3A%20bold%3B%20padding-inline%3A%200.5rem%3B%20padding-block-end%3A%200.2rem%3B%20border-radius%3A%200.5ch%3B%20background-color%3A%20%23eb9%3B%20color%3A%20%23975%3B%20%7D%20span.edgeLabel%3Anot(%3Aempty)%20%7B%20padding%3A%200.5rem%3B%20color%3A%20%23999%3B%20background-color%3A%20%23eee%20%7D%22%7D%7D%25%25%0Aflowchart%20RL%0A%20%20classDef%20idle%20fill%3A%23999%3B%0A%20%20%0A%20%20Idle%0A%20%20subgraph%20Repeat%20%5B%20%5D%0A%20%20%20%20direction%20LR%0A%20%20%20%20subgraph%20Body%20%5B%22When%20a%20reactive%20value%20changes...%22%5D%0A%20%20%20%20%20%20Actions%20--%3E%20Render%20--%3E%20AfterRender%0A%20%20%20%20%20%20Actions%3A%3A%3Astate%0A%20%20%20%20%20%20Render%3A%3A%3Astate%0A%20%20%20%20%20%20AfterRender%3A%3A%3Astate%0A%20%20%20%20end%0A%20%20%0A%20%20%20%20Body%3A%3A%3AsubgraphBody%0A%20%20%0A%20%20%20%20Description%5B%22The%20render%20phase%20may%20repeat%20if%3Cbr%3EAfterRender%20mutates%20a%20reactive%3Cbr%3E%20dependency%20of%20any%20renderer%22%5D%0A%20%20end%0A%20%20%0A%20%20Description%3A%3A%3ADescBox%0A%20%20Idle%3A%3A%3Aidle%0A%20%20Idle%20--%3E%20Repeat%0A%20%20Repeat%20--%3E%20Idle%0A%20%20Idle(((Idle)))%0A%20%20Actions%5B%5BActions%20Phase%5D%5D%0A%20%20Render%5B%5BRender%20Phase%5D%5D%0A%20%20AfterRender%5B%5BAfter%20Render%5D%5D%0A%20%20"}),d])}var v=s(i,[["render",r]]);export{m as __pageData,v as default};
