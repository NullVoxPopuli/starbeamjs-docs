import{_ as i,r as c,o as u,c as l,b as n,e as t,w as a,d as s,a as p}from"./app.eb74b0c8.js";const r={},k=n("h1",{id:"formula-functions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#formula-functions","aria-hidden":"true"},"#"),s(" Formula Functions")],-1),d=n("p",null,"While you can always use normal functions to compute values based on cells, you can also turn functions into formulas:",-1),m=n("li",null,"Formulas recompute only when any reactive state used in the formula changes.",-1),v=s("You can render a formula into the DOM. Check out the "),b=s("Rendering"),f=s(" section for more information."),h=n("div",{class:"custom-container tip"},[n("p",{class:"custom-container-title"},"Tips"),n("p",null,"In practice, it's very uncommon for the overhead of formula functions to outweigh the cost of JavaScript functions, even if they iterate a medium-sized list and do some work for each entry.")],-1),g=n("p",null,[s("To create a formula, pass a function to "),n("code",null,"Formula"),s(".")],-1),y=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" Cell"),n("span",{class:"token punctuation"},","),s(" Formula "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"@starbeam/core"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" name "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"Cell"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"John"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"const"),s(" location "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"Cell"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"New York"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" description "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"Formula"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"string"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("name"),n("span",{class:"token punctuation"},"."),s("current"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"}," lives in "),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("location"),n("span",{class:"token punctuation"},"."),s("current"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" Cell"),n("span",{class:"token punctuation"},","),s(" Formula "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"@starbeam/core"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" name "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"Cell"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"John"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"const"),s(" location "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"Cell"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"New York"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" description "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"Formula"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("name"),n("span",{class:"token punctuation"},"."),s("current"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"}," lives in "),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("location"),n("span",{class:"token punctuation"},"."),s("current"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=p(`<p>And you use the formula the same way as a function.</p><section class="both-lang"><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;John lives in New York&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

name<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;John Doe lives in New York&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

location<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;Los Angeles&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;John Doe lives in Los Angeles&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></section><h2 id="with-props" tabindex="-1"><a class="header-anchor" href="#with-props" aria-hidden="true">#</a> With Props</h2><p>You can also pass props into formula functions. The props are passed into the formula function as the first argument, and the formula function will invalidate:</p><ol><li>When any reactive state used in the formula changes.</li><li>When the props aren&#39;t the same as the props the last time you called the function.</li></ol><div class="custom-container tip"><p class="custom-container-title">Tips</p><p><em>You can customize this behavior by specifying an <code>equals</code> option.</em> See <a href="#equality">Equality</a> below.</p></div>`,6),q=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" Cell"),n("span",{class:"token punctuation"},","),s(" FormulaFn "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"@starbeam/core"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" name "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"Cell"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"John"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" describe "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"FormulaFn"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("location"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"string"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("name"),n("span",{class:"token punctuation"},"."),s("current"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"}," lives in "),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("location"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token function"},"expect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"describe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"New York"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toBe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"John lives in New York"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" Cell"),n("span",{class:"token punctuation"},","),s(" FormulaFn "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},'"@starbeam/core"'),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" name "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"Cell"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"John"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" describe "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"FormulaFn"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("location"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("name"),n("span",{class:"token punctuation"},"."),s("current"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"}," lives in "),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("location"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token function"},"expect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"describe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"New York"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toBe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"John lives in New York"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),N=p(`<p>If you call the same formula function with the same props, it will return the same value.</p><section class="both-lang"><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;New York&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;John lives in New York&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

name<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;New York&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span>
  <span class="token string">&quot;John Doe lives in New York&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&quot;Los Angeles&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span>
  <span class="token string">&quot;John Doe lives in Los Angeles&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></section><h3 id="equality" tabindex="-1"><a class="header-anchor" href="#equality" aria-hidden="true">#</a> Equality</h3><p>If you want to control how the props are compared to determine if the formula needs to be invalidated, you can specify an <code>equals</code> option.</p>`,4),Y=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" describe "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"FormulaFn"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function-variable function"},"fn"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),s("location"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(" country"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"string"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
      card`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("name"),n("span",{class:"token punctuation"},"."),s("current"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"}," lives in "),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("location"),n("span",{class:"token punctuation"},"."),s("country"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token function-variable function"},"equals"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},","),s(" b"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" a"),n("span",{class:"token punctuation"},"."),s("country "),n("span",{class:"token operator"},"==="),s(" b"),n("span",{class:"token punctuation"},"."),s("country"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" first "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"describe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" country"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"New York"'),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token function"},"expect"),n("span",{class:"token punctuation"},"("),s("first"),n("span",{class:"token punctuation"},"."),s("card"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toBe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"John lives in New York"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" second "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"describe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" country"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"New York"'),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token function"},"expect"),n("span",{class:"token punctuation"},"("),s("second"),n("span",{class:"token punctuation"},"."),s("card"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toBe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"John lives in New York"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token function"},"expect"),n("span",{class:"token punctuation"},"("),s("second"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toBe"),n("span",{class:"token punctuation"},"("),s("first"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),F=n("div",{class:"language-typescript ext-ts line-numbers-mode"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" describe "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"FormulaFn"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function-variable function"},"fn"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),s("location"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
      card`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token template-string"},[n("span",{class:"token template-punctuation string"},"`"),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("name"),n("span",{class:"token punctuation"},"."),s("current"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token string"}," lives in "),n("span",{class:"token interpolation"},[n("span",{class:"token interpolation-punctuation punctuation"},"${"),s("location"),n("span",{class:"token punctuation"},"."),s("country"),n("span",{class:"token interpolation-punctuation punctuation"},"}")]),n("span",{class:"token template-punctuation string"},"`")]),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token function-variable function"},"equals"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},","),s(" b"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" a"),n("span",{class:"token punctuation"},"."),s("country "),n("span",{class:"token operator"},"==="),s(" b"),n("span",{class:"token punctuation"},"."),s("country"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" first "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"describe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" country"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"New York"'),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token function"},"expect"),n("span",{class:"token punctuation"},"("),s("first"),n("span",{class:"token punctuation"},"."),s("card"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toBe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"John lives in New York"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" second "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"describe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" country"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"New York"'),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token function"},"expect"),n("span",{class:"token punctuation"},"("),s("second"),n("span",{class:"token punctuation"},"."),s("card"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toBe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"John lives in New York"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token function"},"expect"),n("span",{class:"token punctuation"},"("),s("second"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toBe"),n("span",{class:"token punctuation"},"("),s("first"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),J={class:"custom-container warning"},B=n("p",{class:"custom-container-title"},"Note",-1),C=s("As with the "),$=s("equality example in Cells"),D=s(", this example using "),A=n("code",null,"Object.is",-1),L=s(" to demonstrate when the formula is invalidated."),I=s("In actual code, it is unlikely that you should care about the identity of a formula's return value. If you "),T=n("strong",null,"do",-1),j=s(" care about a formula's identity, there's a good chance that you want a "),R=s("Resource"),V=s(", which are like formulas, but with explicit control over the identity of the value and its cleanup.");function W(E,S){const o=c("RouterLink"),e=c("Code");return u(),l("div",null,[k,d,n("ol",null,[m,n("li",null,[v,t(o,{to:"/guides/5-advanced/1-renderer.html"},{default:a(()=>[b]),_:1}),f])]),h,g,t(e,null,{ts:a(()=>[y]),js:a(()=>[_]),_:1}),w,t(e,null,{ts:a(()=>[q]),js:a(()=>[x]),_:1}),N,t(e,null,{ts:a(()=>[Y]),js:a(()=>[F]),_:1}),n("div",J,[B,n("p",null,[C,t(o,{to:"/guides/2-fundamentals/1-cells.html#equality"},{default:a(()=>[$]),_:1}),D,A,L]),n("p",null,[I,T,j,t(o,{to:"/guides/2-fundamentals/4-resources.html"},{default:a(()=>[R]),_:1}),V])])])}var O=i(r,[["render",W],["__file","1-formulas.html.vue"]]);export{O as default};
